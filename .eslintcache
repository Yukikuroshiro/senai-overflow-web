[{"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\index.js":"1","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\App.js":"2","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\router.js":"3","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\GlobalStyles.js":"4","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\services\\security.js":"5","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Register\\index.js":"6","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Login\\index.js":"7","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Home\\index.js":"8","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\services\\api.js":"9","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Register\\styles.js":"10","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Login\\styles.js":"11","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Home\\styles.js":"12","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\input\\index.js":"13","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\utils.js":"14","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Loading\\index.js":"15","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Select\\index.js":"16","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Tag\\index.js":"17","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Modal\\index.js":"18","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Alert\\index.js":"19","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Modal\\styles.js":"20","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Tag\\styles.js":"21","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Select\\styles.js":"22","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Loading\\styles.js":"23","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Alert\\styles.js":"24","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\SpinnerLoading\\index.js":"25","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\InputSearch\\index.js":"26","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\InputSearch\\style.js":"27","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\input\\styles.js":"28","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\SpinnerLoading\\styles.js":"29"},{"size":207,"mtime":1614182838605,"results":"30","hashOfConfig":"31"},{"size":203,"mtime":1614182838585,"results":"32","hashOfConfig":"31"},{"size":793,"mtime":1614182838608,"results":"33","hashOfConfig":"31"},{"size":1540,"mtime":1614182838586,"results":"34","hashOfConfig":"31"},{"size":1229,"mtime":1614182838609,"results":"35","hashOfConfig":"31"},{"size":3684,"mtime":1614182838608,"results":"36","hashOfConfig":"31"},{"size":2237,"mtime":1614182838607,"results":"37","hashOfConfig":"31"},{"size":14864,"mtime":1614182838606,"results":"38","hashOfConfig":"31"},{"size":114,"mtime":1614190107498,"results":"39","hashOfConfig":"31"},{"size":1708,"mtime":1614182838608,"results":"40","hashOfConfig":"31"},{"size":1708,"mtime":1614182838607,"results":"41","hashOfConfig":"31"},{"size":4768,"mtime":1614182838606,"results":"42","hashOfConfig":"31"},{"size":359,"mtime":1614182838604,"results":"43","hashOfConfig":"31"},{"size":568,"mtime":1614182838609,"results":"44","hashOfConfig":"31"},{"size":242,"mtime":1614182838597,"results":"45","hashOfConfig":"31"},{"size":431,"mtime":1614182838601,"results":"46","hashOfConfig":"31"},{"size":223,"mtime":1614182838603,"results":"47","hashOfConfig":"31"},{"size":339,"mtime":1614182838599,"results":"48","hashOfConfig":"31"},{"size":746,"mtime":1614182838593,"results":"49","hashOfConfig":"31"},{"size":868,"mtime":1614182838600,"results":"50","hashOfConfig":"31"},{"size":432,"mtime":1614182838603,"results":"51","hashOfConfig":"31"},{"size":236,"mtime":1614182838602,"results":"52","hashOfConfig":"31"},{"size":572,"mtime":1614182838598,"results":"53","hashOfConfig":"31"},{"size":688,"mtime":1614182838594,"results":"54","hashOfConfig":"31"},{"size":128,"mtime":1614182838602,"results":"55","hashOfConfig":"31"},{"size":521,"mtime":1614182838595,"results":"56","hashOfConfig":"31"},{"size":718,"mtime":1614182838596,"results":"57","hashOfConfig":"31"},{"size":856,"mtime":1614182838604,"results":"58","hashOfConfig":"31"},{"size":367,"mtime":1614182838602,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1urz6s7",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\index.js",[],["123","124"],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\App.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\router.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\GlobalStyles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\services\\security.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Register\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Login\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Home\\index.js",["125","126","127","128"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { format, set } from \"date-fns\";\r\nimport ReactEmbedGist from \"react-embed-gist\";\r\n\r\nimport {\r\n  ActionsContainer,\r\n  Container,\r\n  Content,\r\n  FeedContainer,\r\n  Header,\r\n  IconSignOut,\r\n  Logo,\r\n  ProfileContainer,\r\n  QuestionCard,\r\n  AnswersCard,\r\n  FormNewQuestion,\r\n  GistIcon,\r\n  ContainerGist,\r\n} from \"./styles\";\r\n\r\nimport imgProfile from \"../../assets/foto_perfil.png\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport { api } from \"../../services/api\";\r\nimport { getUser, setUser, signOut } from \"../../services/security\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Input from \"../../components/input/index\";\r\nimport Select from \"../../components/Select\";\r\nimport Tag from \"../../components/Tag\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { validSquaredImage } from \"../../utils\";\r\nimport SpinnerLoading from \"../../components/SpinnerLoading\";\r\nimport InputSearch from \"../../components/InputSearch\";\r\n\r\nfunction Profile({ setIsLoading, handleReload, setMessage }) {\r\n  const [student, setStudent] = useState(getUser());\r\n\r\n  // useEffect(() => {\r\n  //   setStudent(getUser());\r\n  // }, []);\r\n\r\n  const handleImage = async (e) => {\r\n    if (!e.target.files) return;\r\n\r\n    try {\r\n      await validSquaredImage(e.target.files[0]);\r\n\r\n      const data = new FormData();\r\n\r\n      data.append(\"image\", e.target.files[0]);\r\n\r\n      setIsLoading(true);\r\n\r\n      const response = await api.post(`/students/${student.id}/images`, data);\r\n\r\n      setTimeout(() => {\r\n        setStudent({ ...student, image: response.data.image });\r\n        handleReload();\r\n      }, 1000);\r\n\r\n      setUser({ ...student, image: response.data.image });\r\n    } catch (error) {\r\n      alert(error);\r\n      console.error(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <img\r\n          src={student.image || imgProfile}\r\n          alt=\"Imagem de perfil\"\r\n          title=\"Foto de Perfil\"\r\n        />\r\n        <label htmlFor=\"editImageProfile\">Editar Foto</label>\r\n        <input id=\"editImageProfile\" type=\"file\" onChange={handleImage} />\r\n      </section>\r\n      <section>\r\n        <strong>NOME:</strong>\r\n        <p>{student.Name}</p>\r\n      </section>\r\n      <section>\r\n        <strong>RA:</strong>\r\n        <p>{student.ra}</p>\r\n      </section>\r\n      <section>\r\n        <strong>E-MAIL:</strong>\r\n        <p>{student.email}</p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Question({ question, setIsLoading, setCurrentGist }) {\r\n  const [newAnswer, setNewAnswer] = useState(\"\");\r\n  const [showAnswers, setShowAnswers] = useState(false);\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n  // const handleInput = (e) => {\r\n  //   setAnswer(e.target.value);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setAnswers(question.Answers);\r\n  }, [question.Answers]);\r\n\r\n  const qtdAnwers = answers.length;\r\n\r\n  const handleAddAnswer = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    if (newAnswer < 10)\r\n      return alert(\"A resposta precisa ter no mínimo 10 caracteres\");\r\n\r\n    try {\r\n      const response = await api.post(`/questions/${question.id}/answers`, {\r\n        description: newAnswer,\r\n      });\r\n\r\n      const aluno = getUser();\r\n\r\n      const answerAdded = {\r\n        id: response.data.id,\r\n        description: newAnswer,\r\n        created_at: response.data.createdAt,\r\n        Student: {\r\n          id: aluno.studentId,\r\n          name: aluno.name,\r\n          image: aluno.image,\r\n        },\r\n      };\r\n\r\n      setAnswers([...answers, answerAdded]);\r\n\r\n      setNewAnswer(\"\");\r\n      setIsLoading(false);\r\n      // console.log(response);\r\n    } catch (error) {\r\n      alert(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // const showAnswers = () => {\r\n  //   if (show === true) {\r\n  //     // const container = question.Answers.map((a) => <Answer answer={a} />);\r\n  //     // console.log(container);\r\n\r\n  //     setShow(false);\r\n  //   } else {\r\n  //     setShow(true);\r\n  //   }\r\n\r\n  //   // alert(show);\r\n  // };\r\n\r\n  const student = getUser();\r\n\r\n  return (\r\n    <QuestionCard>\r\n      <header>\r\n        <img\r\n          src={question.Student.image || imgProfile}\r\n          alt=\"Imagem de perfil\"\r\n        />\r\n        <strong>\r\n          por{\" \"}\r\n          {student.studentId === question.Student.id\r\n            ? \"Você\"\r\n            : question.Student.name}\r\n        </strong>\r\n        <p>\r\n          em {format(new Date(question.created_at), \"dd/MM/yyyy 'as' HH:mm\")}\r\n        </p>\r\n        {question.gist && (\r\n          <GistIcon onClick={() => setCurrentGist(question.gist)} />\r\n        )}\r\n      </header>\r\n      <section>\r\n        <strong>{question.title}</strong>\r\n        <p>{question.description}</p>\r\n        {question.image ? (\r\n          <img src={question.image} alt=\"Imagem da pergunta\" />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </section>\r\n      <footer>\r\n        <h1 onClick={() => setShowAnswers(!showAnswers)}>\r\n          {qtdAnwers === 0 ? (\r\n            \"Seja o primeiro a responder\"\r\n          ) : (\r\n            <>\r\n              {qtdAnwers}\r\n              {qtdAnwers > 1 ? \" Respostas\" : \" Resposta\"}\r\n            </>\r\n          )}\r\n        </h1>\r\n        {showAnswers && (\r\n          <>\r\n            {answers.map((a) => (\r\n              <Answer key={answers.id} answer={a} />\r\n            ))}\r\n\r\n            {/* <AnswersCard>\r\n          <header>\r\n            <img src={imgProfile} />\r\n            <strong>por </strong>\r\n            <p>12/12/2012 as 12:12</p>\r\n          </header>\r\n          <p>Resposta para a pergunta.</p>\r\n        </AnswersCard> */}\r\n\r\n            <form onSubmit={handleAddAnswer}>\r\n              <textarea\r\n                minLength=\"10\"\r\n                placeholder=\"Responda essa dúvida!\"\r\n                onChange={(e) => setNewAnswer(e.target.value)}\r\n                required\r\n                id=\"answer\"\r\n                value={newAnswer}\r\n              ></textarea>\r\n              <button>Enviar</button>\r\n            </form>\r\n          </>\r\n        )}\r\n      </footer>\r\n    </QuestionCard>\r\n  );\r\n}\r\n\r\nfunction Answer({ answer }) {\r\n  const student = getUser();\r\n\r\n  return (\r\n    <AnswersCard>\r\n      <header>\r\n        <img src={answer.Student.image || imgProfile} alt=\"Imagem de perfil\" />\r\n        <strong>\r\n          por{\" \"}\r\n          {student.studentId === answer.Student.id\r\n            ? \"Você\"\r\n            : answer.Student.name}\r\n        </strong>\r\n        <p>em {format(new Date(answer.created_at), \"dd/MM/yyyy 'as' HH:mm\")}</p>\r\n      </header>\r\n      <p>{answer.description}</p>\r\n    </AnswersCard>\r\n  );\r\n}\r\n\r\nfunction NewQuestion({ handleReload, setIsLoading }) {\r\n  const [newQuestion, setNewQuestion] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    gist: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [categoriesSel, setCategoriesSel] = useState([]);\r\n\r\n  const [image, setImage] = useState(null);\r\n\r\n  const imageRef = useRef();\r\n\r\n  const categoriesRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const loadCategories = async () => {\r\n      try {\r\n        const response = await api.get(\"/categories\");\r\n\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    };\r\n\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const handleCategories = (e) => {\r\n    const idSel = e.target.value;\r\n\r\n    const categorySel = categories.find((c) => c.id.toString() === idSel);\r\n\r\n    if (categorySel && !categoriesSel.includes(categorySel))\r\n      setCategoriesSel([...categoriesSel, categorySel]);\r\n\r\n    e.target[e.target.selectedIndex].disabled = true;\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const handleImage = (e) => {\r\n    if (e.target.files[0]) {\r\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\r\n      imageRef.current.style.display = \"flex\";\r\n    } else {\r\n      imageRef.current.src = \"\";\r\n      imageRef.current.style.display = \"none\";\r\n    }\r\n\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUnselCategory = (idUnsel) => {\r\n    setCategoriesSel(categoriesSel.filter((c) => c.id !== idUnsel));\r\n\r\n    const { options } = categoriesRef.current;\r\n\r\n    for (let index = 0; index < options.length; index++) {\r\n      if (options[index].value === idUnsel.toString())\r\n        options[index].disabled = false;\r\n    }\r\n  };\r\n\r\n  const handleAddNewQuestion = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const data = new FormData();\r\n\r\n    data.append(\"title\", newQuestion.title);\r\n    data.append(\"description\", newQuestion.description);\r\n\r\n    const categories = categoriesSel.reduce((s, c) => (s += c.id + \",\"), \"\");\r\n\r\n    data.append(\"categories\", categories.substr(0, categories.length - 1));\r\n\r\n    if (image) data.append(\"image\", image);\r\n    if (newQuestion.gist) data.append(\"gist\", newQuestion.gist);\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await api.post(\"/questions\", data, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      handleReload();\r\n    } catch (error) {\r\n      alert(error);\r\n      console.error(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setNewQuestion({ ...newQuestion, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <FormNewQuestion onSubmit={handleAddNewQuestion}>\r\n      <Input\r\n        id=\"title\"\r\n        label=\"Titulo\"\r\n        value={newQuestion.title}\r\n        handler={handleInput}\r\n        required\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        label=\"Descrição\"\r\n        value={newQuestion.description}\r\n        handler={handleInput}\r\n        required\r\n      />\r\n      <Input\r\n        id=\"gist\"\r\n        label=\"Gist\"\r\n        value={newQuestion.gist}\r\n        handler={handleInput}\r\n      />\r\n      <Select\r\n        id=\"categories\"\r\n        label=\"Categorias\"\r\n        handler={handleCategories}\r\n        ref={categoriesRef}\r\n      >\r\n        <option value=\"\">Selecione</option>\r\n        {categories.map((c) => (\r\n          <option key={c.id} value={c.id}>\r\n            {c.description}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      <div>\r\n        {categoriesSel.map((c) => (\r\n          <Tag\r\n            key={c.id}\r\n            info={c.description}\r\n            handleClose={() => handleUnselCategory(c.id)}\r\n          ></Tag>\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" onChange={handleImage} />\r\n      <img alt=\"Pré-visualização\" ref={imageRef} />\r\n      <button>Enviar</button>\r\n    </FormNewQuestion>\r\n  );\r\n}\r\n\r\nfunction Gist({ gist, handleClose }) {\r\n  if (gist) {\r\n    const formatedGist = gist.split(\".com/\").pop();\r\n    return (\r\n      <Modal\r\n        title=\"Exemplo de código\"\r\n        handleClose={() => handleClose(undefined)}\r\n      >\r\n        <ContainerGist>\r\n          <ReactEmbedGist gist={formatedGist} />\r\n        </ContainerGist>\r\n      </Modal>\r\n    );\r\n  } else return null;\r\n}\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isLoadingFeed, setIsLoadingFeed] = useState(false);\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [reload, setReload] = useState(null);\r\n\r\n  const [showNewQuestion, setShowNewQuestion] = useState(false);\r\n\r\n  const [currentGist, setCurrentGist] = useState(undefined);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n\r\n  const loadQuestions = async () => {\r\n    //Se já estiver buscando, não busca de novo\r\n    if (isLoadingFeed) return;\r\n\r\n    //Se tiver chego no fim, não busca de novo\r\n    if (totalQuestions > 0 && totalQuestions == questions.length) return;\r\n\r\n    setIsLoadingFeed(true);\r\n    const response = await api.get(\"/feed\", {\r\n      params: { page },\r\n    });\r\n\r\n    setPage(page + 1);\r\n\r\n    setQuestions([...questions, ...response.data]);\r\n\r\n    setTotalQuestions(response.headers[\"x-total-count\"]);\r\n\r\n    setIsLoadingFeed(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadQuestions();\r\n  }, [reload]);\r\n\r\n  const handleSignOut = () => {\r\n    signOut();\r\n\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const handleReload = () => {\r\n    setShowNewQuestion(false);\r\n    setIsLoading(false);\r\n    setPage(1);\r\n    setQuestions([]);\r\n    setSearch(\"\");\r\n    setReload(Math.random());\r\n  };\r\n\r\n  const feedScrollObserver = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e.target;\r\n\r\n    if (scrollTop + clientHeight >= scrollHeight - 100 && search.length < 4)\r\n      loadQuestions();\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    setSearch(e.target.value);\r\n\r\n    if (e.target.value.length === 0) setReload(Math.random());\r\n\r\n    if (e.target.value.length < 4) return;\r\n\r\n    try {\r\n      const response = await api.get(\"/questions\", {\r\n        params: { search: e.target.value },\r\n      });\r\n\r\n      setQuestions(response.data);\r\n    } catch (error) {\r\n      alert(error);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n\r\n      <Gist gist={currentGist} handleClose={setCurrentGist} />\r\n\r\n      {showNewQuestion && (\r\n        <Modal\r\n          title=\"Faça uma pergunta\"\r\n          handleClose={() => setShowNewQuestion(false)}\r\n        >\r\n          <NewQuestion\r\n            handleReload={handleReload}\r\n            setIsLoading={setIsLoading}\r\n          ></NewQuestion>\r\n        </Modal>\r\n      )}\r\n      <Container>\r\n        <Header>\r\n          <Logo src={logo} onClick={handleReload} />\r\n          <InputSearch handler={handleSearch} value={search} />\r\n          <IconSignOut onClick={handleSignOut} />\r\n        </Header>\r\n        <Content>\r\n          <ProfileContainer>\r\n            <Profile handleReload={handleReload} setIsLoading={setIsLoading} />\r\n          </ProfileContainer>\r\n          <FeedContainer onScroll={feedScrollObserver}>\r\n            {questions.length === 0 &&\r\n              search.length > 3 &&\r\n              \"Nenhuma questão encontrada\"}\r\n            {questions.map((q) => (\r\n              <Question\r\n                key={q.id}\r\n                question={q}\r\n                setIsLoading={setIsLoading}\r\n                setCurrentGist={setCurrentGist}\r\n              />\r\n            ))}\r\n            {isLoadingFeed && <SpinnerLoading />}\r\n            {totalQuestions > 0 &&\r\n              totalQuestions == questions.length &&\r\n              \"Isso é tudo\"}\r\n            {/* <button onClick={loadQuestions}>Ver Mais</button> */}\r\n          </FeedContainer>\r\n          <ActionsContainer>\r\n            <button onClick={() => setShowNewQuestion(true)}>\r\n              Fazer uma pergunta\r\n            </button>\r\n          </ActionsContainer>\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\services\\api.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Register\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Login\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\pages\\Home\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\input\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\utils.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Loading\\index.js",["129"],"import { Container } from \"./styles\";\r\nimport imgLogo from \"../../assets/logo.png\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <Container>\r\n      <img src={imgLogo} />\r\n      Carregando...\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Select\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Tag\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Modal\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Alert\\index.js",["130"],"import { useEffect, useRef } from \"react\";\r\nimport { Container } from \"./styles\";\r\n\r\nfunction Alert({ message, type, handleClose }) {\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      containerRef.current.style.width = \"300px\";\r\n\r\n      setTimeout(() => {\r\n        handleClose(undefined);\r\n      }, 5000);\r\n    } else {\r\n      containerRef.current.style.width = \"0px\";\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <Container type={type} ref={containerRef}>\r\n      {message && (\r\n        <>\r\n          <span onClick={() => handleClose(undefined)}>&times;</span>\r\n          <h1>{message.title}</h1>\r\n          <p>{message.description}</p>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Modal\\styles.js",[],["131","132"],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Tag\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Select\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Loading\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\Alert\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\SpinnerLoading\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\InputSearch\\index.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\InputSearch\\style.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\input\\styles.js",[],"C:\\Users\\20185446\\Desktop\\senai-overflow-web\\src\\components\\SpinnerLoading\\styles.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":18,"nodeType":"139","messageId":"140","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":450,"column":46,"nodeType":"143","messageId":"144","endLine":450,"endColumn":48},{"ruleId":"145","severity":1,"message":"146","line":468,"column":6,"nodeType":"147","endLine":468,"endColumn":14,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"142","line":552,"column":30,"nodeType":"143","messageId":"144","endLine":552,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":7,"column":7,"nodeType":"151","endLine":7,"endColumn":28},{"ruleId":"145","severity":1,"message":"152","line":17,"column":6,"nodeType":"147","endLine":17,"endColumn":15,"suggestions":"153"},{"ruleId":"133","replacedBy":"154"},{"ruleId":"135","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'set' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadQuestions'. Either include it or remove the dependency array.","ArrayExpression",["158"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'handleClose'. Either include it or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [loadQuestions, reload]",{"range":"164","text":"165"},"Update the dependencies array to be: [handleClose, message]",{"range":"166","text":"167"},[12132,12140],"[loadQuestions, reload]",[416,425],"[handleClose, message]"]